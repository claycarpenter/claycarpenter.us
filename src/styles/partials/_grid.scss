/*
  Basic grid foundation.
*/

.container {
  width: auto;
  margin: 0 auto;
}

.container:after,
.row:after {
  // Float container fix.
  content: "";
  display: table;
  clear: both;
}

*,
*:after,
*:before {
  box-sizing: border-box;
}

@mixin padded-box {
  float: left;
  padding: 0 1%;
}

@mixin grid-builder($size, $col) {
  .col-#{$size}-#{$col} {
      @include padded-box;
      width: ($col / 12) * 100%;

      // Selectively remove padding from first, last, and full-width columns.
      &:first-of-type {
        padding-left: 0;
      }

      &:last-of-type {
        padding-left: 0;
      }

      @if ($col == 12) {
        padding: 0;
      }
  }

  .col-#{$size}-offset-#{$col} {
    margin-left: ($col / 12) * 100%;
  }

  .col-#{$size}-offset-right-#{$col} {
    margin-right: ($col / 12) * 100%;
  }

  .col-#{$size}-pad-#{$col} {
    padding-left: ($col / 12) * 100%;
  }

  .col-#{$size}-pad-right-#{$col} {
    padding-right: ($col / 12) * 100%;
  }
}

@for $i from 1 through 12 {
  @include grid-builder('sm', $i);
}

@media only screen and (min-width: $break-md) {
  @for $i from 1 through 12 {
    @include grid-builder('md', $i);
  }
}

@media only screen and (min-width: $break-lg) {
  @for $i from 1 through 12 {
    @include grid-builder('lg', $i);
  }
}

.center-content {
  max-width: 1024px;
  margin: 0 auto;
}

.col-10-pad {
  @extend .col-md-pad-1, .col-md-pad-right-1;
}

.col-8-10-pad {
  @extend .col-lg-pad-2, .col-lg-pad-right-2, .col-md-pad-1, .col-md-pad-right-1;
}
